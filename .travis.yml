---
language: python
python:
  - "3.8"
cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/.cache/pipenv
services: docker

env:
  global:
    - ROLE_NAME: aws-ecr-credential-helper
  matrix:
    - MOLECULE_DISTRO: debian:9
    - MOLECULE_DISTRO: debian:9
      MOLECULE_PLAYBOOK: playbook_force_binary.yml
    - MOLECULE_DISTRO: debian:10
    - MOLECULE_DISTRO: debian:10
      MOLECULE_PLAYBOOK: playbook_force_binary.yml
    - MOLECULE_DISTRO: ubuntu:16.04
    - MOLECULE_DISTRO: ubuntu:16.04
      MOLECULE_PLAYBOOK: playbook_force_binary.yml
    - MOLECULE_DISTRO: ubuntu:18.04
    - MOLECULE_DISTRO: ubuntu:18.04
      MOLECULE_PLAYBOOK: playbook_force_binary.yml
    - MOLECULE_DISTRO: ubuntu:19.10
    - MOLECULE_DISTRO: ubuntu:19.10
      MOLECULE_PLAYBOOK: playbook_force_binary.yml
    - MOLECULE_DISTRO: ubuntu:20.04
    - MOLECULE_DISTRO: ubuntu:20.04
      MOLECULE_PLAYBOOK: playbook_force_binary.yml
    - MOLECULE_DISTRO: ubuntu:20.10
    - MOLECULE_DISTRO: ubuntu:20.10
      MOLECULE_PLAYBOOK: playbook_force_binary.yml

install:
  # Install test dependencies.
  - pipenv install

before_script:
  # Use actual Ansible Galaxy role name for the project directory.
  - cd ../
  - mv ansible-role-$ROLE_NAME thiagoalmeidasa.$ROLE_NAME
  - cd thiagoalmeidasa.$ROLE_NAME

script:
  # Run tests.
  - pipenv run molecule test

notifications:
  webhooks: https://galaxy.ansible.com/api/v1/notifications/
